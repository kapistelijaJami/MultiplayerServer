MultiplayerServer
│
├─ Packet
│   ├─ Fields:
│   │   ├─ UUID senderUuid
│   │   └─ Target target
│   ├─ Constructors:
│   │   ├─ Packet()
│   │   ├─ Packet(UUID senderUuid)
│   │   ├─ Packet(Target target)
│   │   └─ Packet(UUID senderUuid, Target target)
│
├─ PacketRegistry
│   ├─ Fields:
│   │   ├─ Map<String, Class<? extends Packet>> classNameToClass
│   │   ├─ Map<Class<? extends Packet>, String> classToClassName
│   │   ├─ Map<Class<? extends Packet>, Consumer<? extends Packet>> handlers
│   │   ├─ Consumer<Packet> defaultHandler
│   │   ├─ Consumer<Packet> globalHandler
│   │   └─ Gson gson
│   ├─ Methods:
│   │   ├─ PacketRegistry()
│   │   ├─ void registerBuiltInPackets()
│   │   ├─ <T extends Packet> void registerPacket(Class<T> clazz)
│   │   ├─ <T extends Packet> void registerHandler(Class<T> clazz, Consumer<T> handler)
│   │   ├─ void setDefaultHandler(Consumer<Packet> handler)
│   │   ├─ void setGlobalHandler(Consumer<Packet> handler)
│   │   ├─ String serialize(Packet packet)
│   │   ├─ Packet parsePacket(String payload)
│   │   └─ void callHandler(Packet packet)
│
├─ Server
│   ├─ Fields:
│   │   ├─ int serverPort
│   │   ├─ ServerSocket tcpSocket
│   │   ├─ DatagramSocket udpSocket
│   │   ├─ Map<UUID, ClientInformation> clients
│   │   ├─ PacketRegistry packetRegistry
│   │   ├─ TargetRegistry targetRegistry
│   │   ├─ ClientInformation hostClient
│   │   └─ boolean running
│   ├─ Methods:
│   │   ├─ Server(int serverPort, PacketRegistry registry)
│   │   ├─ void start()
│   │   ├─ void tcpAcceptLoop()
│   │   ├─ void tcpClientLoop(ClientInformation client)
│   │   ├─ void udpReceiveLoop()
│   │   ├─ void handlePacket(Packet packet, Protocol protocol)
│   │   ├─ ClientInformation getClient(UUID uuid)
│   │   ├─ Collection<ClientInformation> getClients()
│   │   ├─ ClientInformation getHostClient()
│   │   ├─ void setHostClient(UUID uuid)
│   │   ├─ void setHostClient(HasUUID obj)
│   │   ├─ PacketRegistry getPacketRegistry()
│   │   ├─ TargetRegistry getTargetRegistry()
│   │   ├─ void sendToTargets(List<? extends HasUUID> targets, Packet packet, Protocol protocol)
│   │   ├─ void sendPacket(UUID uuid, Packet packet, Protocol protocol)
│   │   ├─ void sendPacket(ClientInformation client, Packet packet, Protocol protocol)
│   │   ├─ void sendTCP(UUID uuid, Packet packet)
│   │   ├─ void sendTCP(ClientInformation client, Packet packet)
│   │   ├─ void sendUDP(UUID uuid, Packet packet)
│   │   ├─ void sendUDP(ClientInformation client, Packet packet)
│   │   ├─ void addClient(ClientInformation client)
│   │   └─ void stop()
│
├─ ClientInformation implements HasUUID
│   ├─ Fields:
│   │   ├─ InetAddress ipAddress
│   │   ├─ Socket tcpSocket
│   │   ├─ int udpPort
│   │   ├─ UUID uuid
│   │   └─ PacketRegistry registry
│   ├─ Methods:
│   │   ├─ ClientInformation(Socket tcpSocket, PacketRegistry registry)
│   │   ├─ ClientInformation(InetAddress ipAddress, int udpPort, UUID uuid, PacketRegistry registry)
│   │   ├─ void setTcpSocket(Socket tcpSocket)
│   │   ├─ void setUdpPort(int clientUdpPort)
│   │   ├─ void setUuid(UUID uuid)
│   │   ├─ InetAddress getIpAddress()
│   │   ├─ Socket getTcpSocket()
│   │   ├─ int getUdpPort()
│   │   ├─ UUID getUuid()
│   │   └─ void sendTCP(Packet packet)
│
├─ Client
│   ├─ Fields:
│   │   ├─ InetAddress serverIP
│   │   ├─ int serverPort
│   │   ├─ Socket tcpSocket
│   │   ├─ DatagramSocket udpSocket
│   │   ├─ UUID uuid
│   │   ├─ PacketRegistry packetRegistry
│   │   └─ boolean running
│   ├─ Methods:
│   │   ├─ Client(InetAddress serverIP, int serverPort, PacketRegistry registry)
│   │   ├─ void connect()
│   │   ├─ void listenTCP()
│   │   ├─ void listenUDP()
│   │   ├─ void sendPacket(Packet packet, Protocol protocol)
│   │   ├─ void sendTCP(Packet packet)
│   │   ├─ void sendUDP(Packet packet)
│   │   ├─ UUID getUuid()
│   │   └─ void stop()
│
├─ Target
│   ├─ Fields:
│   │   ├─ String name
│   │   └─ UUID uuid
│   ├─ Methods:
│   │   ├─ Target(String groupName)
│   │   ├─ Target(UUID uuid)
│   │   ├─ String getGroupName()
│   │   └─ UUID getUuid()
│   ├─ Static Fields:
│   │   ├─ Target ALL
│   │   ├─ Target SERVER
│   │   ├─ Target HOST_CLIENT
│   │   ├─ Target ALL_BUT_HOST_CLIENT
│   │   └─ Target UUID
│
├─ TargetRegistry
│   ├─ Fields:
│   │   ├─ Map<String, BiFunction<Server, Target, List<HasUUID>>> resolvers
│   │   └─ Server server
│   ├─ Methods:
│   │   ├─ TargetRegistry(Server server)
│   │   ├─ void registerBuiltInTargets()
│   │   ├─ void register(Target target, BiFunction<Server, Target, List<HasUUID>> resolver)
│   │   ├─ List<HasUUID> resolveTargets(Target target)
│   │   └─ void sendToTargets(List<? extends HasUUID> targets, Packet packet, Protocol protocol)
│
├─ SendUuid extends Packet
│   ├─ Fields:
│   │   └─ int udpPort
│   ├─ Constructors:
│   │   └─ SendUuid(UUID uuid, int udpPort)
│
├─ HasUUID (interface)
│   ├─ Methods:
│   │   └─ UUID getUuid()